name: 4. CI/CD Workflow Back End

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install pipenv
        run: pip install pipenv
      - name: Install dependencies
        run: |
          pipenv install
        working-directory: starter/backend

      - name: Run tests
        run: |
          pipenv run test
        working-directory: starter/backend

  lint:
    name: Run Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install pipenv
        run: pip install pipenv
        working-directory: starter/backend

      - name: Install dependencies
        run: |
          pipenv install
          pipenv install flake8
        working-directory: starter/backend

      - name: Run linter
        run: |
          pipenv run lint
        working-directory: starter/backend

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}
      - name: Build Docker image
        run: |
          docker build --tag my-backend-app:${{ github.sha }} .
        working-directory: starter/backend
      - name: Configure AWS CLI
        env:
          AWS_REGION: us-east-1  # Update with your region
        run: |
          aws eks update-kubeconfig --name my-cluster-1

      - name: Create ECR repository (if it doesn't exist)
        run: |
          aws ecr describe-repositories --repository-name my-backend-app  --region ${{ secrets.REGION }} || aws ecr create-repository --repository-name my-frontend-app  --region ${{ secrets.REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }}

      - name: Push Docker image to ECR
        run: |
          docker tag my-backend-app:${{ github.sha }} ${{ secrets.AWS_ECR_URL }}/my-backend-app:${{ github.sha }}
          docker push ${{ secrets.AWS_ECR_URL }}/my-backend-app:${{ github.sha }}

      - name: Configure kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.REGION }} --name my-cluster-1

      - name: Kubernetes Configure
        run: |
          kubectl apply -f starter/frontend/k8s/service.yaml
          kubectl apply -f starter/frontend/k8s/deployment.yaml

      - name: Kubernetes Get Deployments
        run: |
          kubectl get deployments

      - name: Set image for Deployment
        run: |
          kubectl set image deployment/frontend frontend=${{ secrets.AWS_ECR_URL }}/my-frontend-app:${{ github.sha }}

  deploy:
    name: Deploy Kubernetes Manifests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deployed
        run: |
          echo "Deployed"
      