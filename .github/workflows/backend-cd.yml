name: 4. CI/CD Workflow Back End

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install pipenv
        run: pip install pipenv
      - name: Install dependencies
        run: |
          pipenv install
        working-directory: starter/backend

      - name: Run tests
        run: |
          pipenv run test
        working-directory: starter/backend

  lint:
    name: Run Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install pipenv
        run: pip install pipenv
        working-directory: starter/backend

      - name: Install dependencies
        run: |
          pipenv install
          pipenv install flake8
        working-directory: starter/backend

      - name: Run linter
        run: |
          pipenv run lint
        working-directory: starter/backend

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Docker image
        run: |
          docker build --tag my-backend-app:${{ github.sha }} .
        working-directory: starter/backend

  deploy:
    name: Deploy Kubernetes Manifests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}
      
      - name: Configure AWS CLI
        env:
          AWS_REGION: us-east-1  # Update with your region
        run: |
          aws eks update-kubeconfig --name my-cluster-1
      - name: Install kustomize
        run: |
          sudo apt-get update && sudo apt-get install -y kustomize
      - name: Set image tag and apply manifests
        run: |
          kustomize edit set image backend=${{ secrets.AWS_ECR_URL }}/my-backend-app:${{ github.sha }}
          kustomize build | kubectl apply -f -
        working-directory: starter/backend/k8s

  